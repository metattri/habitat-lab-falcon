# @package _global_

defaults:
  - /benchmark/nav/socialnav_v2: falcon_hm3d_task
  - /habitat_baselines: habitat_baselines_rl_config_base
  - /habitat/simulator/sim_sensors@habitat_baselines.eval.extra_sim_sensors.third_rgb_sensor: third_rgb_sensor 
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_1: single_fixed
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_2: single_fixed
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_3: single_fixed
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_4: single_fixed
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_5: single_fixed
  - /habitat_baselines/rl/policy@habitat_baselines.rl.policy.agent_6: single_fixed
  - /habitat/task/actions@habitat.task.actions.agent_0_discrete_stop: discrete_stop
  - /habitat/task/actions@habitat.task.actions.agent_0_discrete_move_forward: discrete_move_forward
  - /habitat/task/actions@habitat.task.actions.agent_0_discrete_turn_left: discrete_turn_left
  - /habitat/task/actions@habitat.task.actions.agent_0_discrete_turn_right: discrete_turn_right
  # - /habitat/task/actions@habitat.task.actions.agent_0_discrete_move_backward: discrete_move_backward # new action 4
  # - /habitat/task/actions@habitat.task.actions.agent_0_discrete_pause: discrete_pause # new action 5
  - /habitat/task/actions@habitat.task.actions.agent_1_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/actions@habitat.task.actions.agent_2_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/actions@habitat.task.actions.agent_3_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/actions@habitat.task.actions.agent_4_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/actions@habitat.task.actions.agent_5_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/actions@habitat.task.actions.agent_6_oracle_nav_randcoord_action_obstacle: oracle_nav_action 
  - /habitat/task/lab_sensors@habitat.task.lab_sensors.agent_0_pointgoal_with_gps_compass: pointgoal_with_gps_compass_sensor
  - _self_

habitat:
  environment:
    iterator_options:
      shuffle: False # keep the same order
  gym:
    obs_keys: 
      # - agent_0_articulated_agent_jaw_rgb # use it if add RGB camera
      - agent_0_articulated_agent_jaw_depth
      - agent_0_pointgoal_with_gps_compass
  task:
    actions:
      agent_0_discrete_stop:
        lin_speed: 0.0 
        ang_speed: 0.0
      agent_0_discrete_move_forward:
        lin_speed: 25.0
        ang_speed: 0.0
        allow_dyn_slide: True
      agent_0_discrete_turn_left:
        lin_speed: 0.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_0_discrete_turn_right:
        lin_speed: 0.0
        ang_speed: -10.0
        allow_dyn_slide: True
      agent_1_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_2_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_3_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_4_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_5_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
      agent_6_oracle_nav_randcoord_action_obstacle:
        type: OracleNavRandCoordAction_Obstacle 
        motion_control: human_joints
        lin_speed: 10.0
        ang_speed: 10.0
        allow_dyn_slide: True
habitat_baselines:
  evaluate: True
  verbose: True 
  trainer_name: "ddppo"
  torch_gpu_id: 0
  tensorboard_dir: "evaluation/falcon/hm3d/tb"
  video_dir: "evaluation/falcon/hm3d/video"
  test_episode_count: -1
  eval_ckpt_path_dir: "pretrained_model/pretrained_mini.pth"
  num_environments: 8
  checkpoint_folder: "evaluation/falcon/hm3d/checkpoints"
  num_updates: -1
  total_num_steps: 1e8
  log_interval: 10
  num_checkpoints: 200
  # Force PyTorch to be single threaded as
  # this improves performance considerably
  force_torch_single_threaded: True
  load_resume_state_config: False

  evaluator:
    _target_: habitat_baselines.rl.ppo.falcon_evaluator.FALCONEvaluator

  eval:
    use_ckpt_config: False 
    should_load_ckpt: True
    # video_option: ["disk"]

  rl:
    agent:
      type: "MultiAgentAccessMgr"
      num_agent_types: 7
      num_active_agents_per_type: [1, 1, 1, 1, 1, 1, 1]
      num_pool_agents_per_type: [1, 1, 1, 1, 1, 1, 1]
      agent_sample_interval: 20 
      force_partner_sample_idx: -1
    policy:
      agent_0:
        name: "PointNavResNetPolicy"
    ppo:
      # ppo params
      clip_param: 0.2
      ppo_epoch: 2
      num_mini_batch: 2
      value_loss_coef: 0.5
      entropy_coef: 0.01
      lr: 2.5e-4
      eps: 1e-5
      max_grad_norm: 0.2
      num_steps: 128
      use_gae: True
      gamma: 0.99
      tau: 0.95
      use_linear_clip_decay: False
      use_linear_lr_decay: False
      reward_window_size: 50

      use_normalized_advantage: False

      hidden_size: 128

      # Use double buffered sampling, typically helps
      # when environment time is similar or larger than
      # policy inference time during rollout generation
      use_double_buffered_sampler: False

    ddppo:
      # Model parameters
      backbone: resnet18
      rnn_type: LSTM
      num_recurrent_layers: 2